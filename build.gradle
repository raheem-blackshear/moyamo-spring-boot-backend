buildscript {
    ext {
        springBootVersion = '2.4.7'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'io.spring.dependency-management'


allprojects {
    group = 'net.infobank.moyamo'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}



subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2020.0.3")
        set('mapstructVersion', "1.3.1.Final")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        runtime("org.springframework.boot:spring-boot-properties-migrator")
        compile("org.mapstruct:mapstruct:${mapstructVersion}")
        compileOnly("org.mapstruct:mapstruct-processor:${mapstructVersion}")
        annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
        implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.16.0'
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        implementation 'org.hibernate:hibernate-spatial:5.2.14.Final'
        implementation 'org.hibernate:hibernate-ehcache:5.4.13.Final'
        implementation 'org.hibernate:hibernate-search-orm:5.11.9.Final'
        implementation 'org.hibernate:hibernate-search-elasticsearch:5.11.9.Final'
        implementation 'org.elasticsearch.client:elasticsearch-rest-client:6.8.12'
        implementation 'org.elasticsearch.client:elasticsearch-rest-client-sniffer:5.6.16'
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}

project(':moyamo') {
    dependencies {
        compile project(':moyamo-common')
        compile project(':moyamo-event-domain')
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
    }
}

project(':moyamo-admin') {
    dependencies {
        compile project(':moyamo-common')
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
    }
}

project(':moyamo-scheduler') {
    dependencies {
        compile project(':moyamo-common')
        compile project(':moyamo-event-domain')
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
    }
}

//def common = project(':moyamo-common')
//def domain = project(':moyamo-event-domain')

/*configure ([common]) {

    apply plugin: "io.spring.dependency-management"
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
    }
}*/

